{"version":3,"sources":["reusable/DocsLink.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","views/base/list-groups/Keyboard2.js","views/base/list-groups/ListGroups.js"],"names":["DocsLink","props","name","text","rest","href","className","rel","target","React","memo","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","_arrayLikeToArray","len","arr2","_unsupportedIterableToArray","o","minLen","n","prototype","toString","call","slice","constructor","from","test","Keyboard2","state","layoutName","input","modal","onChange","setState","console","log","onKeyPress","button","handleShift","onChangeInput","event","keyboard","setInput","_handleKeyDown","e","key","this","setResulting","changeModal","bind","border","style","width","height","placeholder","onKeyDown","keyboardRef","r","physicalKeyboardHighlight","Component","ListGroups","useState","resulting","listWord","useEffect","sm","xl","map","word","a","Math","floor","random","getRandomWord","color","showValue"],"mappings":"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","file":"static/js/13.1c49e242.chunk.js","sourcesContent":["import React from 'react'\nimport { CLink } from '@coreui/react'\n\nconst DocsLink = props => {\n  const {\n    name,\n    text,\n    ...rest\n  } = props\n\n  const href = name ? `https://coreui.io/react/docs/components/${name}` : props.href\n\n  return (\n    <div className=\"card-header-actions\">\n      <CLink \n        {...rest}\n        href={href}\n        rel=\"noreferrer noopener\" \n        target=\"_blank\" \n        className=\"card-header-action\"  \n      >\n        <small className=\"text-muted\">{ text || 'docs' }</small>\n      </CLink>\n    </div>\n  )\n}\n\nexport default React.memo(DocsLink)","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import React, { Component } from \"react\";\nimport { render } from \"react-dom\";\nimport Keyboard from \"react-simple-keyboard\";\nimport \"react-simple-keyboard/build/css/index.css\";\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CListGroup,\n  CListGroupItem,\n  CProgress,\n  CProgressBar,\n  CRow,\n  CTabContent,\n  CModal,\n  CModalBody,\n  CModalHeader,\n  CModalFooter,\n  CModalTitle,\n  CButton,\n  CTabPane,\n} from \"@coreui/react\";\n\nexport default class Keyboard2 extends Component {\n  constructor(props){\n    super(props);\n    this._handleKeyDown = this._handleKeyDown.bind(this);\n  }\n  state = {\n    layoutName: \"default\",\n    input: \"\",\n    modal: true\n  };\n\n  onChange = input => {\n    this.setState({ input });\n    console.log(\"Input changed\", input);\n  };\n\n  onKeyPress = button => {\n    console.log(\"Button pressed\", button);\n\n    /**\n     * If you want to handle the shift and caps lock buttons\n     */\n    if (button === \"{shift}\" || button === \"{lock}\") this.handleShift();\n  };\n\n  handleShift = () => {\n    const layoutName = this.state.layoutName;\n\n    this.setState({\n      layoutName: layoutName === \"default\" ? \"shift\" : \"default\"\n    });\n  };\n\n  onChangeInput = event => {\n    const input = event.target.value;\n    this.setState({ input });\n    console.log(\"SET INPUT A\");\n    this.keyboard.setInput(input);\n    console.log(\"SET INPUT B\");\n  };\n  _handleKeyDown = function(e) {\n    console.log(e);\n    if (e.key === 'Enter') {\n      console.log(\"dada\");\n      this.setState({ input: '' });\n      this.props.setResulting(true);\n    }\n  }\n  changeModal = () => {\n    this.setState({...this.state, modal: !this.state.modal})\n  }\n  render() {\n    return (\n      <div>\n        <input\n         border\n          style={{width: '100%', height: '50px'}}\n          value={this.state.input}\n          placeholder={\"Điền câu trả lời của bạn\"}\n          onChange={this.onChangeInput}\n          onKeyDown={this._handleKeyDown}\n        />\n        <br/>\n        <Keyboard\n          keyboardRef={r => (this.keyboard = r)}\n          layoutName={this.state.layoutName}\n          onChange={this.onChange}\n          onKeyPress={this.onKeyPress}\n          physicalKeyboardHighlight={true}\n        />\n      </div>\n    );\n  }\n}\n","import React, { useEffect, useState } from \"react\";\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CListGroup,\n  CListGroupItem,\n  CProgress,\n  CProgressBar,\n  CRow,\n  CTabContent,\n  CModal,\n  CModalBody,\n  CModalHeader,\n  CModalFooter,\n  CModalTitle,\n  CButton,\n  CTabPane,\n} from \"@coreui/react\";\nimport ProgressBar from \"react\";\nimport { DocsLink } from \"src/reusable\";\nimport Keyboard2 from \"./Keyboard2\";\n\nconst ListGroups = () => {\n  const [trueAnswer, setTrueAnswer] = useState();\n  const [resulting, setResulting] = useState(false);\n  const [activeTab, setActiveTab] = useState(1);\n  const [ramdomWord, setRandomWord] = useState();\n  const [listWord, setListWord] = useState([\n    \"Mong\",\n    \"đợi\",\n    \"giang\",\n    \"chờ\",\n    \"học\",\n    \"nghiêng\",\n    \"thuyền\",\n  ]);\n  const getRandomWord = () => {\n    const a = Math.floor(Math.random() * (listWord.length - 1 + 1)) + 0;\n    return listWord[a];\n  };\n  useEffect(() => {\n    \n  }, [resulting])\n  return (\n    <>\n      <CRow>\n        <CCol sm=\"12\" xl=\"3\">\n          <CCard>\n            <CCardHeader>Các từ hay sai</CCardHeader>\n            <CCardBody>\n              <CListGroup>\n                {listWord.map((word) => (\n                  <CListGroupItem>{word}</CListGroupItem>\n                ))}\n              </CListGroup>\n            </CCardBody>\n          </CCard>\n        </CCol>\n\n        <CCol sm=\"12\" xl=\"9\">\n          <CCard>\n            <CCardHeader>Luyện tập từ sai</CCardHeader>\n            <CCardBody>\n              <h3>Từ cần học: {getRandomWord()}</h3>\n              {\n                resulting?\n                <>Kết quả: {Math.random() > 0.5? \"Chính xác\" : \"Không chính xác\"}</>\n                :\n                <></>\n              }\n              <p>Thời gian còn lại</p>\n              <CProgress\n                color=\"success\"\n                value={42}\n                showValue\n                className=\"mb-1 bg-white\"\n              />\n              <Keyboard2 setResulting={setResulting}/>\n            </CCardBody>\n          </CCard>\n        </CCol>\n        \n      </CRow>\n    </>\n  );\n};\n\nexport default ListGroups;\n"],"sourceRoot":""}