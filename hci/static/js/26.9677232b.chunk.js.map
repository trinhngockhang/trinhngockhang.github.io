{"version":3,"sources":["reusable/DocsLink.js","views/charts/Keyboard2.js","views/notifications/badges/KeyBoardCustom1.js","views/notifications/badges/Content2.js","views/notifications/badges/Badges.js"],"names":["DocsLink","props","name","text","rest","href","className","rel","target","React","memo","Component","KeyBoadCustom1","state","layoutName","input","onChange","setState","console","log","onKeyPress","button","handleShift","onChangeInput","event","value","keyboard","setInput","style","width","height","this","placeholder","keyboardRef","r","physicalKeyboardHighlight","Content2","xs","md","paddingLeft","paddingRight","src","id","Badges","marginLeft","onClick","el","topPos","document","getElementById","offsetTop","scrollTop","scrollIntoView","overflow"],"mappings":"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","file":"static/js/26.9677232b.chunk.js","sourcesContent":["import React from 'react'\nimport { CLink } from '@coreui/react'\n\nconst DocsLink = props => {\n  const {\n    name,\n    text,\n    ...rest\n  } = props\n\n  const href = name ? `https://coreui.io/react/docs/components/${name}` : props.href\n\n  return (\n    <div className=\"card-header-actions\">\n      <CLink \n        {...rest}\n        href={href}\n        rel=\"noreferrer noopener\" \n        target=\"_blank\" \n        className=\"card-header-action\"  \n      >\n        <small className=\"text-muted\">{ text || 'docs' }</small>\n      </CLink>\n    </div>\n  )\n}\n\nexport default React.memo(DocsLink)","import React, { Component } from \"react\";\nimport { render } from \"react-dom\";\nimport Keyboard from \"react-simple-keyboard\";\nimport \"react-simple-keyboard/build/css/index.css\";\n\nexport default class Keyboard2 extends Component {\n  state = {\n    layoutName: \"default\",\n    input: \"\"\n  };\n\n  onChange = input => {\n    this.setState({ input });\n    console.log(\"Input changed\", input);\n  };\n\n  onKeyPress = button => {\n    console.log(\"Button pressed\", button);\n\n    /**\n     * If you want to handle the shift and caps lock buttons\n     */\n    if (button === \"{shift}\" || button === \"{lock}\") this.handleShift();\n  };\n\n  handleShift = () => {\n    const layoutName = this.state.layoutName;\n\n    this.setState({\n      layoutName: layoutName === \"default\" ? \"shift\" : \"default\"\n    });\n  };\n\n  onChangeInput = event => {\n    const input = event.target.value;\n    this.setState({ input });\n    console.log(\"SET INPUT A\");\n    this.keyboard.setInput(input);\n    console.log(\"SET INPUT B\");\n  };\n\n  render() {\n    return (\n      <div>\n        <textarea\n          style={{width: '100%'}}\n          value={this.state.input}\n          placeholder={\"Tap on the virtual keyboard to start\"}\n          onChange={this.onChangeInput}\n        />\n        <Keyboard\n          keyboardRef={r => (this.keyboard = r)}\n          layoutName={this.state.layoutName}\n          onChange={this.onChange}\n          onKeyPress={this.onKeyPress}\n          physicalKeyboardHighlight={true}\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { render } from \"react-dom\";\nimport Keyboard from \"react-simple-keyboard\";\nimport \"react-simple-keyboard/build/css/index.css\";\nimport {\n    CBadge,\n    CButton,\n    CCard,\n    CCardBody,\n    CCardFooter,\n    CCardGroup,\n    CCardHeader,\n    CCol,\n    CRow\n  } from '@coreui/react'\nexport default class KeyBoadCustom1 extends Component {\n  state = {\n    layoutName: \"default\",\n    input: \"\"\n  };\n\n  onChange = input => {\n    this.setState({ input });\n    console.log(\"Input changed\", input);\n  };\n\n  onKeyPress = button => {\n    console.log(\"Button pressed\", button);\n\n    /**\n     * If you want to handle the shift and caps lock buttons\n     */\n    if (button === \"{shift}\" || button === \"{lock}\") this.handleShift();\n  };\n\n  handleShift = () => {\n    const layoutName = this.state.layoutName;\n\n    this.setState({\n      layoutName: layoutName === \"default\" ? \"shift\" : \"default\"\n    });\n  };\n\n  onChangeInput = event => {\n    const input = event.target.value;\n    this.setState({ input });\n    console.log(\"SET INPUT A\");\n    this.keyboard.setInput(input);\n    console.log(\"SET INPUT B\");\n  };\n\n  render() {\n    return (\n      <div>\n        <CCard>\n        <textarea\n          style={{width: '100%', height:'100%'}}\n          value={this.state.input}\n          placeholder={\"Các phím vừa nhập vào\"}\n          onChange={this.onChangeInput}\n        />\n        </CCard>\n        <CCard>\n        <textarea\n          style={{width: '100%'}}\n          value={this.state.input}\n          placeholder={\"Văn bản đầu ra\"}\n          onChange={this.onChangeInput}\n        />\n        </CCard>\n        <CCard>\n        <Keyboard\n          keyboardRef={r => (this.keyboard = r)}\n          layoutName={this.state.layoutName}\n          onChange={this.onChange}\n          onKeyPress={this.onKeyPress}\n          physicalKeyboardHighlight={true}\n        />\n          </CCard>\n      </div>\n    );\n  }\n}\n","import React from 'react'\nimport {\n  CBadge,\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CRow\n} from '@coreui/react'\n\nconst Content2 = () => {\n  return (\n    <CRow>\n      <CCol xs=\"12\" md=\"12\" style={{paddingLeft: '2px', paddingRight:'2px'}}>\n        <h1>1.  TỔNG QUAN </h1>\n        <h2>1.1. Mục đích </h2>\n        <p>Tài liệu này cung cấp các quy tắc, hướng dẫn cách gõ tốc ký một cách nhanh chóng và chính xác. Đồng thời, tài liệu này hướng dẫn cách sử dụng các chức năng của phần mềm bộ gõ tốc ký tiếng Việt.</p>\n        <h2>1.2 Phạm vi </h2>\n        <p>Tài liệu này phục vụ đối tượng là: NSD cuối cùng</p>\n        <h1>2. NGUYÊN TẮC GÕ TỐC KÝ </h1>\n        <h2>2.1   Bàn phím gõ tốc ký </h2>\n\n        <p>Bàn phím tốc ký như minh hoạ trong Hình II.1 gồm 23 phím. Trong đó, 22 phím dùng để gõ từ và cụm từ, đặc biệt có 2 phím S, 2 phím T, 2 phím H. Ngoài ra, còn có thêm 1 phím phía trên (thanh số) để chuyển đổi chế độ gõ số.</p>\n        <img style={{width:'100%'}} src=\"avatars/a1.png\"></img>\n        <p>Ánh xạ các phím của bàn phím gõ tốc ký lên bàn phím QWERTY thông thường được mô tả trong Hình II.2. Trong đó, phím dải số (1234567890) của bàn phím QWERTY tương ứng với thanh số, các phím khác được gán nhãn tương ứng. </p>\n        <h2>2.2.  Trật tự của bàn phím tốc ký </h2>\n        <h2>2.3.  Quy tắc gõ từ tiếng Việt  </h2>\n        <h2>2.3.1.  Quy tắc gõ âm đầu </h2>\n        <h2 id=\"gr2.3.2\">2.3.2.  Quy tắc gõ âm chính </h2>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default Content2\n","import React from 'react'\nimport {\n  CBadge,\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CRow\n} from '@coreui/react'\nimport { DocsLink } from 'src/reusable'\nimport Keyboard2 from 'src/views/charts/Keyboard2'\nimport KeyBoadCustom1 from './KeyBoardCustom1';\nimport Content2 from './Content2';\n\nconst Badges = () => {\n  const scrollIntoView = (el) => {\n    var myElement = document.getElementById(el);\n    var topPos = myElement.offsetTop;\n    console.log(topPos);\n    document.getElementById('AAAA').scrollTop = topPos;\n  }\n  return (\n    <CRow>\n      <CCol xs=\"12\" md=\"2\" style={{paddingLeft: '2px', paddingRight:'2px'}}>\n        <CCard>\n         <CCardHeader>\n           Đề mục\n         </CCardHeader>\n         <CCardBody>\n           <ul style={{marginLeft:'-2rem'}}>1. Tổng quan</ul>\n           <ol style={{marginLeft:'-1.5rem'}}> 1.1 Mục đích </ol>\n           <ol style={{marginLeft:'-1.5rem'}}> 1.2 Phạm vi </ol>\n           <ul style={{marginLeft:'-2rem'}}>2. Nguyên tắc gõ tốc ký\n            <ol style={{marginLeft:'-1.5rem'}}>2.1   Bàn phím gõ tốc ký </ol>\n            <ol style={{marginLeft:'-1.5rem'}}>2.2  Trật tự của bàn phím tốc ký</ol>\n            <ol style={{marginLeft:'-1.5rem'}}>2.3  Quy tắc gõ từ tiếng Việt\n            <ol style={{marginLeft:'-1.5rem'}}>2.3.1  Quy tắc gõ âm đầu</ol>\n            <ol style={{marginLeft:'-1.5rem'}} onClick={() => {\n              scrollIntoView('gr2.3.2')\n            }} >2.3.2  Quy tắc gõ âm chính</ol>\n            </ol>\n            </ul>\n           <ul style={{marginLeft:'-2rem'}}>3. Hướng dẫn sử dụng</ul>\n         </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs=\"12\" md=\"6\" style={{paddingLeft: '2px', paddingRight:'2px'}}>\n        <CCard>\n        <CCardHeader>\n           Nội dung\n         </CCardHeader>\n\n         <CCardBody style={{height:'600px', overflow:'auto'}}  id=\"AAAA\">\n          <Content2/>\n         </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs=\"12\" md=\"4\" style={{paddingLeft: '2px', paddingRight:'2px'}}>\n  \n        <CCardHeader>\n           Thử nghiệm\n         </CCardHeader>\n          <KeyBoadCustom1/>\n        \n      </CCol>\n    </CRow>\n  )\n}\n\nexport default Badges\n"],"sourceRoot":""}